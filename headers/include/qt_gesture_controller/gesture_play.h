// Generated by gencpp from file qt_gesture_controller/gesture_play.msg
// DO NOT EDIT!


#ifndef QT_GESTURE_CONTROLLER_MESSAGE_GESTURE_PLAY_H
#define QT_GESTURE_CONTROLLER_MESSAGE_GESTURE_PLAY_H

#include <ros/service_traits.h>


#include <qt_gesture_controller/gesture_playRequest.h>
#include <qt_gesture_controller/gesture_playResponse.h>


namespace qt_gesture_controller
{

struct gesture_play
{

typedef gesture_playRequest Request;
typedef gesture_playResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct gesture_play
} // namespace qt_gesture_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::qt_gesture_controller::gesture_play > {
  static const char* value()
  {
    return "b8a4b9991efb6139d3fd7428a2ee4889";
  }

  static const char* value(const ::qt_gesture_controller::gesture_play&) { return value(); }
};

template<>
struct DataType< ::qt_gesture_controller::gesture_play > {
  static const char* value()
  {
    return "qt_gesture_controller/gesture_play";
  }

  static const char* value(const ::qt_gesture_controller::gesture_play&) { return value(); }
};


// service_traits::MD5Sum< ::qt_gesture_controller::gesture_playRequest> should match 
// service_traits::MD5Sum< ::qt_gesture_controller::gesture_play > 
template<>
struct MD5Sum< ::qt_gesture_controller::gesture_playRequest>
{
  static const char* value()
  {
    return MD5Sum< ::qt_gesture_controller::gesture_play >::value();
  }
  static const char* value(const ::qt_gesture_controller::gesture_playRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::qt_gesture_controller::gesture_playRequest> should match 
// service_traits::DataType< ::qt_gesture_controller::gesture_play > 
template<>
struct DataType< ::qt_gesture_controller::gesture_playRequest>
{
  static const char* value()
  {
    return DataType< ::qt_gesture_controller::gesture_play >::value();
  }
  static const char* value(const ::qt_gesture_controller::gesture_playRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::qt_gesture_controller::gesture_playResponse> should match 
// service_traits::MD5Sum< ::qt_gesture_controller::gesture_play > 
template<>
struct MD5Sum< ::qt_gesture_controller::gesture_playResponse>
{
  static const char* value()
  {
    return MD5Sum< ::qt_gesture_controller::gesture_play >::value();
  }
  static const char* value(const ::qt_gesture_controller::gesture_playResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::qt_gesture_controller::gesture_playResponse> should match 
// service_traits::DataType< ::qt_gesture_controller::gesture_play > 
template<>
struct DataType< ::qt_gesture_controller::gesture_playResponse>
{
  static const char* value()
  {
    return DataType< ::qt_gesture_controller::gesture_play >::value();
  }
  static const char* value(const ::qt_gesture_controller::gesture_playResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // QT_GESTURE_CONTROLLER_MESSAGE_GESTURE_PLAY_H
